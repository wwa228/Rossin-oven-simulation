Local device count 1 
local devices [CpuDevice(id=0)]
---------------------------------------------------------------------------------------------------- 
Optimization of ['R13SSR4'] with warm start from None
---------------------------------------------------------------------------------------------------- 
Arguments
{'atol': 1e-08,
 'cpus': 1,
 'gen': 200,
 'id': '',
 'iterations': 2,
 'load_dir': '.',
 'lr': 0.01,
 'msg': '',
 'mxstep': 10000,
 'optimize': 1,
 'partition': '',
 'products_test': 'R13SSR4',
 'products_train': 'R13SSR4',
 'recirculation': 0,
 'rtol': 1e-06} 
----------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------- 
Product and simulation specific oven constants 
R13 : {'density_air': 1,
 'density_particle': 2500,
 'density_product': 7.60855,
 'enthalpy_vaporization_water': 2000000.0,
 'equilibrium_moisture': 0.008,
 'ntimes': 15,
 'ny': 20,
 'nzones': 5,
 'product_height': 0.1,
 'radius_particle': 4e-06,
 'reverse_zone': 3,
 'specific_heat_capacity_air': 1047,
 'specific_heat_capacity_solid': 800}
---------------------------------------------------------------------------------------------------- 
Experiment specific controls and targets 
R13SSR4 : Product(controls={'init_velocity_air': Array([0.087, 0.097, 0.154, 0.207, 0.207], dtype=float64), 'init_temperature_air': Array([484.11111111, 481.33333333, 500.77777778, 500.77777778,
       500.77777778], dtype=float64), 'residence_time': Array([14.], dtype=float64), 'init_moisture_air': Array([0.01, 0.01, 0.01, 0.01, 0.01], dtype=float64), 'recirculation_ratio': Array([0., 0., 0., 0., 0.], dtype=float64)}, targets={5: array([303.15975, 330.49455, 332.1721 , 332.406  , 332.28905, 332.1331 ,
       331.9382 , 332.445  , 332.9907 , 333.0296 , 332.73715, 332.6787 ,
       332.7762 , 332.77625, 333.12705, 331.50925, 331.4118 , 332.5422 ,
       342.3779 , 356.5566 , 371.71965, 383.22035, 394.49505, 408.18555,
       417.93835, 423.74725, 429.8976 , 439.891  , 448.15855, 454.0147 ,
       458.905  , 463.3526 , 467.29535, 460.3205 , 440.83385, 413.00715,
       385.1415 , 365.291  , 358.0888 , 362.95505, 378.90165, 400.5107 ,
       421.1597 , 437.6301 , 449.7088 , 458.1567 , 464.10265, 468.9364 ,
       472.29265, 474.41485, 476.1927 , 477.9699 , 479.50445, 480.85675,
       482.1078 , 483.25755, 484.34655, 485.3546 , 486.0804 , 486.54405,
       486.64495, 486.7256 , 486.84655, 486.8667 , 486.8667 , 486.8667 ,
       486.8667 , 486.8667 , 486.8264 , 486.84655, 486.8264 , 486.7861 ,
       486.70555, 472.4738 , 340.60955, 306.33025, 299.1855 , 296.4629 ,
       294.93855, 294.03475, 293.49195, 294.557  , 293.9744 , 293.35125,
       293.95435, 293.39145, 292.74795])}, targets_mask={'mask': Array([0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0.], dtype=float64), 'target_map': Array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]], dtype=float64)})
---------------------------------------------------------------------------------------------------- 
def _mass_transfer_coefficient(x, B, c):
    # negative value is eliminated in the final equation using exp

    X, Ts, Y, Ta, Ye = x
    
    if isinstance(B, dict):

        x =  jnp.append(jnp.append(X, jnp.append(Ts, jnp.append(Ta, Y))), c.density_product)
        n = len(B["weight"])
        for i, (weight, bias) in enumerate(zip(B["weight"], B["bias"])):
            x = jnp.dot(weight, x) + bias
            if i < n - 1:
                x = jnp.tanh(x)

        return jnp.exp(x)
    else: return B

---------------------------------------------------------------------------------------------------- 
def _heat_transfer_coefficient(x, A, c):
    # negative value is eliminated in the final equation using exp
    
    X, Ts, Y, Ta, Ye = x
    
    if isinstance(A, dict):
        x =  jnp.append(jnp.append(X, jnp.append(Ts, jnp.append(Ta, Y))), c.density_product)
        n = len(A["weight"])
        for i, (weight, bias) in enumerate(zip(A["weight"], A["bias"])):
            x = jnp.dot(weight, x) + bias
            if i < n - 1 :
                x = jnp.tanh(x) 
        
        return jnp.exp(x)
    else: return A

---------------------------------------------------------------------------------------------------- 
def moisture_content(T, density_air, relative_humidity = 1):
    # calculates the equilibrium moisture content in the air at given temperature
    # assumes ideal gas law
    mw_air = 28.96e-3 # kg/mol molecular weight of air
    mw_water = 18.01e-3 # kg/mol molecular weight of water 
    P_sat = saturated_pressure(T) # Pa
    return vapor_pressure_to_moisture(P_sat, T, density_air, relative_humidity)

---------------------------------------------------------------------------------------------------- 
scaled_reaction_rate = lambda A, k0, T : k0 * jnp.exp( - A / 1.98 / unscale_states(T, temperature_max, temperature_min))

---------------------------------------------------------------------------------------------------- 
Training Experiments target heights
R13SSR4 : dict_keys([5])
Testing experiments target heights
R13SSR4 : dict_keys([5])
---------------------------------------------------------------------------------------------------- 
def _objective(meta_params : dict, solid_moisture_init : jnp.ndarray, solid_moisture_sigma : jnp.ndarray, constants : Constants, 
                target : jnp.ndarray, target_mask : jnp.ndarray, controls : Controls, solid_temperature_init : jnp.ndarray, 
                recirculation : bool, key) -> Tuple[jnp.ndarray]:
    
    ny = constants.ny
    xinit = jnp.column_stack((
        solid_moisture_init * jnp.ones(ny) + solid_moisture_sigma * jrandom.normal(key, shape = (ny, )), # moisture 
        solid_temperature_init * jnp.ones(ny), # temperature
        jnp.zeros(shape = (ny, )) # cure 
    ))

    _parameters = meta_params["parameters"]
    _parameters["reaction_rate"] = 2.33 * 10**7 # Do not optimize this yet
    _parameters["activation_energy"] = 20. * 10**3 # Do not optimize this yet

    # oven_dynamics discards the provided initial condition (It is assumed that the initial condition are the values of states at t = -1)
    solution = oven_dynamics(xinit, _parameters, controls, constants, reverse_zone = constants.reverse_zone, nzones = constants.nzones, recirculation = recirculation)
    moisture_solid, temperature_solid, cure, moisture_air, temperature_air, t_event = tree_util.tree_map(jnp.vstack, solution)

    # mse_cost = mean squared error cost. total_cost = mse_cost + regularization cost
    mse_cost = jnp.sum((temperature_solid * target_mask - target[1:])**2 * (ny - jnp.count_nonzero(target_mask)))
    total_cost = mse_cost
    return total_cost, mse_cost, xinit, *(moisture_solid, temperature_solid, cure, moisture_air, temperature_air, t_event)

---------------------------------------------------------------------------------------------------- 
Initial guess of parameters {'parameters': Parameters(params={'mass_transfer_coefficient_falling': defaultdict(<class 'list'>, {'weight': [Array([[ 0.00271846, -0.00221971,  0.00524635, -0.00582695, -0.00499798],
       [-0.01332438, -0.00715606, -0.00231319,  0.00983229, -0.01126742],
       [ 0.02126611, -0.00093819,  0.00286677, -0.00305304, -0.00476762],
       [-0.00717686, -0.00202819, -0.01123574, -0.00293377,  0.00307205],
       [ 0.01219444,  0.00659236, -0.00093308, -0.00197792, -0.01545449],
       [-0.00212836, -0.00993648,  0.00387322, -0.00629826,  0.00046373],
       [-0.01007371, -0.0180889 , -0.02001135, -0.00998022, -0.01770827],
       [ 0.01301542,  0.00983185, -0.00457604,  0.01229619,  0.00953824],
       [ 0.01840678, -0.00122476,  0.01160498,  0.02489938, -0.01162747],
       [-0.0009059 , -0.00436782, -0.00269817,  0.01199049,  0.00463232]],      dtype=float64), Array([[-1.17166272e-02,  1.18439915e-02, -6.54599611e-03,
        -9.67287233e-03,  1.38260311e-02, -2.85808155e-02,
        -5.04328744e-03,  7.86806072e-03, -2.09543967e-02,
         4.93921811e-03],
       [-1.26754078e-03,  3.71941279e-03,  2.05090838e-03,
        -5.82160562e-03, -3.92664088e-03,  2.59951837e-03,
         1.35400578e-02, -2.68616597e-03,  9.33500451e-03,
        -1.52420259e-02],
       [-7.22390652e-03,  8.37965201e-03,  8.26144035e-03,
        -1.01641366e-02,  1.13020942e-02,  9.95546547e-03,
         3.62033572e-03,  3.87298081e-03, -1.43879113e-02,
         2.47027029e-03],
       [-4.51901854e-03, -2.48711857e-03, -5.43480284e-03,
         4.62321482e-03,  1.21875705e-04, -9.00458785e-03,
        -1.04983042e-02, -5.83256195e-03, -1.41181309e-02,
         1.68635957e-03],
       [ 8.63539071e-04, -1.30289143e-02, -7.72673855e-04,
         7.23215181e-03, -8.12740966e-03,  6.73156814e-03,
         1.52174641e-02,  9.43783620e-03,  6.78677944e-03,
         2.87952941e-03],
       [ 2.47787390e-03,  2.67950459e-03, -1.38393162e-03,
        -9.47461215e-04, -1.07274907e-02,  1.38252326e-02,
        -3.59931951e-03,  2.00473469e-03, -1.25082567e-02,
         7.33850478e-03],
       [ 7.84088576e-03,  1.30789439e-02,  1.68642163e-03,
         5.09139815e-03,  4.17256896e-03,  1.40380761e-02,
         1.00333663e-03, -7.74356310e-03, -1.83175936e-02,
        -5.69058416e-03],
       [ 1.21569325e-02, -9.67576876e-03, -7.43663415e-03,
        -7.20552719e-05, -4.72400530e-04, -3.21778087e-02,
        -8.28436445e-03,  2.94682664e-03,  1.66030232e-02,
         3.24112978e-03],
       [ 5.46391596e-03,  2.06055260e-02, -1.27476609e-02,
        -1.51933950e-03, -1.74114110e-03,  1.18129748e-02,
         1.02296968e-02,  5.22906710e-03,  1.30305574e-02,
         1.97620746e-02],
       [ 9.67219372e-03, -4.75472929e-04, -2.92547530e-03,
         7.78812421e-03,  3.57918494e-03,  1.22401429e-02,
        -2.07094367e-02,  3.15417430e-03, -4.67993699e-03,
        -1.81451176e-02]], dtype=float64), Array([[ 0.00133239, -0.0095473 , -0.00929099, -0.00082596, -0.00946257,
         0.0030406 , -0.01823037,  0.00754918,  0.00024248, -0.00711746]],      dtype=float64)], 'bias': [Array([ 0.01048952,  0.01083855, -0.00320652,  0.00702542, -0.00494052,
        0.00647191, -0.00884282, -0.00881121,  0.00606508,  0.01529383],      dtype=float64), Array([-0.01578262,  0.00852604,  0.00283512,  0.01225962,  0.00446697,
        0.00030118,  0.01318117,  0.02149447, -0.0135099 , -0.00226544],      dtype=float64), Array([-0.00834291], dtype=float64)]}), 'mass_transfer_coefficient_constant': Array([160.], dtype=float64), 'heat_transfer_coefficient_falling': defaultdict(<class 'list'>, {'weight': [Array([[-0.00724685, -0.01618596,  0.00218296, -0.00700299, -0.00317363],
       [ 0.00013072,  0.01482621, -0.01537637,  0.01821624, -0.02252088],
       [-0.00592651, -0.01329884,  0.00924959, -0.00345155, -0.00316895],
       [-0.00199734, -0.00861019,  0.0124686 , -0.00704671,  0.00169946],
       [ 0.00670148,  0.00204135,  0.00023319,  0.0042336 , -0.01049741],
       [ 0.01290697, -0.00044366, -0.0015932 ,  0.00226697,  0.00439212],
       [ 0.01446076,  0.014174  ,  0.00527482,  0.01947832,  0.00732787],
       [ 0.00345952,  0.00463592, -0.0162369 ,  0.00403397, -0.00648092],
       [ 0.00130429, -0.00472191, -0.00111818,  0.00721872, -0.01111588],
       [ 0.00433874, -0.00157516,  0.00188875,  0.00413284, -0.00139073]],      dtype=float64), Array([[ 5.15305042e-03,  9.61020020e-04,  2.22072128e-02,
         6.73355984e-03, -8.02385600e-03, -7.91503479e-03,
        -5.26334562e-03,  4.01110731e-03,  2.36628919e-02,
         8.90467249e-04],
       [-1.80261846e-03,  1.54304152e-02, -8.74416798e-03,
        -1.36573937e-02,  2.24740478e-03,  3.16663989e-02,
         6.34074627e-03, -1.12000086e-03, -5.39078653e-03,
         4.05008533e-03],
       [-2.03591171e-03,  2.66667353e-02, -4.67762328e-03,
         8.98556601e-04,  2.84687875e-03,  2.15262027e-03,
         5.23740082e-03,  1.48446168e-02, -3.27711722e-03,
         1.49829255e-02],
       [ 1.32638658e-04, -1.49422672e-02, -1.33825312e-02,
        -1.51529516e-02, -1.05120520e-03,  6.91198383e-03,
         5.29176666e-03,  2.89213619e-03,  2.29947739e-02,
        -4.77870922e-03],
       [-1.64053432e-03, -9.23577965e-04,  7.72422924e-03,
        -1.51382231e-02, -8.78766237e-03,  1.10402459e-02,
         3.26264030e-03, -6.86939938e-03, -4.32033220e-03,
         1.17919405e-02],
       [-1.09943046e-02,  2.03947423e-03, -7.82886983e-04,
        -5.17426707e-03,  4.02166597e-03, -5.58834061e-03,
         1.28780712e-02, -7.45600043e-03, -5.01901982e-03,
         7.85976087e-03],
       [-5.95892210e-03, -1.78674462e-03, -9.89122433e-03,
         7.83952355e-05,  5.16936431e-03,  2.52001731e-02,
        -9.78701224e-03, -1.08492649e-02, -8.10731639e-03,
        -1.30125926e-02],
       [ 4.82111541e-03,  5.56438835e-03,  2.56501288e-03,
        -4.49345393e-03,  6.44933857e-04, -1.29399720e-03,
         5.07938558e-03,  1.78065439e-02,  7.77323288e-03,
         6.31942268e-03],
       [-7.16961030e-03,  2.69249899e-03, -1.49711543e-02,
        -1.37320174e-02, -5.94538406e-03, -2.14444915e-02,
         4.69008505e-03,  6.25196691e-03,  4.89893453e-03,
         3.83482987e-03],
       [ 3.33663470e-03,  3.66413195e-03,  8.13734684e-03,
         3.26718512e-03,  1.79980722e-02, -4.40221939e-03,
        -9.22645627e-03, -5.74194821e-03,  5.71187731e-03,
         1.58518591e-02]], dtype=float64), Array([[-8.53466367e-03, -1.79988870e-02,  8.10906630e-03,
        -2.04214688e-03,  1.73256807e-03, -1.05472236e-02,
        -7.13934042e-03, -9.25036389e-05,  1.28038547e-02,
        -3.13005418e-03]], dtype=float64)], 'bias': [Array([ 0.00774317,  0.00820618,  0.00097165,  0.00173412,  0.00928423,
       -0.0030729 ,  0.00087346, -0.00217987,  0.00316654, -0.0002606 ],      dtype=float64), Array([ 0.01226054,  0.00734869, -0.00399706, -0.01514642,  0.01494738,
       -0.00782287, -0.01535812,  0.00156552, -0.00266264,  0.01263654],      dtype=float64), Array([0.01112395], dtype=float64)]}), 'heat_transfer_coefficient_constant': Array([0.5], dtype=float64), 'critical_moisture': Array([0.07403168], dtype=float64), 'constant': Array([2., 5., 5., 5., 5.], dtype=float64), 'constant_jump': Array([5.], dtype=float64)})}
---------------------------------------------------------------------------------------------------- 
Initial guess of solid moisture [Array([0.1], dtype=float64)]
---------------------------------------------------------------------------------------------------- 
def objective(diff_args : Tuple[jnp.ndarray, List[jnp.ndarray], jnp.ndarray], pmap_args : Tuple[jnp.ndarray], 
                key : jnp.ndarray, _product_list : List[str]) -> Tuple[jnp.ndarray, List[jnp.ndarray]] :
    
    # Function used only for training. For loop over the list of unique products 
    meta_params_flatten, moist_init, moist_sigma = diff_args
    moist_init = [moist_init[product_list.index(prod[:3])] for prod in _product_list]

    asum, cost, *solution = zip(*[
        _objective_pmap(meta_params_flatten, _args[0], moist_sigma, *_args[1:], pargs.recirculation, key)
        for _args in zip(moist_init, *pmap_args)
    ])

    _kl = 0
    for _mi in moist_init:
        _kl += kl_div(_mi, moist_sigma, 0.1, 0.005)

    asum = tree_util.tree_reduce(operator.add, tree_util.tree_map(jnp.sum, asum)) + jnp.sum(_kl)
    return asum, cost, solution

---------------------------------------------------------------------------------------------------- 
Piecewise constant learning rate with boundaries [2000, 3000] and values [0.01, 0.001, 0.0001]
---------------------------------------------------------------------------------------------------- 
NLP Options {'aux_args': Array([1931546366, 1873410571], dtype=uint32),
 'epochs': 2,
 'opt_state': None,
 'print_every_epoch': 1,
 'step_size': <function piecewise_constant.<locals>.schedule at 0x000002529F62DA20>}
---------------------------------------------------------------------------------------------------- 
Started Optimization
Critical moisture ratio [0.07403168]
Mass transfer coefficient constant [160.]
Heat transfer coefficient constant [0.5]
Inlet moisture of R13SSR4 is (Array([0.1], dtype=float64), Array([0.003], dtype=float64))(mean, sigma), mse cost 1.907285269157068, total cost 2.0981108929230587
----------------------------------------------------------------------------------------------------
  0%|          | 0/2 [06:07<?, ?it/s]
epoch 0, training loss 2.0981108929230587, gradients norm (Array(279.32302422, dtype=float64), [Array(278.88161688, dtype=float64)], Array(79.09084278, dtype=float64)), testing loss 2.0981108929230587
Critical moisture ratio [0.08403168]
Mass transfer coefficient constant [159.99000015]
Heat transfer coefficient constant [0.51]
Inlet moisture of R13SSR4 is (Array([0.09], dtype=float64), Array([0.013], dtype=float64))(mean, sigma), mse cost 6.360284599181613, total cost 10.284773153450534
----------------------------------------------------------------------------------------------------
 50%|#####     | 1/2 [06:11<06:07, 367.49s/it]
epoch 1, training loss 10.284773153450534, gradients norm (Array(269.98749432, dtype=float64), [Array(669.9628809, dtype=float64)], Array(425.41795707, dtype=float64)), testing loss 10.284773153450534
Finished Optimization 
 ----------------------------------------------------------------------------------------------------
Sigma [0.013]
---------------------------------------------------------------------------------------------------- 
Optimization result {'opt_state': OptimizerState(packed_state=([Array([ 2.00744137e+00,  4.98698208e+00,  4.98973806e+00,  4.98357702e+00,
        4.98951834e+00,  4.98554164e+00,  8.36690098e-02,  5.14756069e-01,
        3.01818333e-04,  1.25546571e-02,  1.94197047e-02, -1.63040972e-02,
       -8.86177555e-03, -3.07290237e-03,  8.73461047e-04, -2.17986576e-03,
        3.16654193e-03, -2.60600736e-04,  1.97019069e-02,  2.58288630e-02,
       -5.87660886e-04, -2.95398088e-02,  1.17882992e-02, -7.82286548e-03,
       -1.53581188e-02,  1.56551978e-03, -2.66263540e-03,  1.26365416e-02,
       -6.71869760e-03, -2.43873243e-02, -3.36014133e-02, -1.52464199e-02,
       -2.18033025e-02, -2.06199091e-02,  2.41474799e-03,  1.73717631e-02,
       -1.28145958e-02,  1.82664514e-02, -1.99493606e-02, -3.35563509e-03,
       -1.06571876e-02,  1.19181307e-02, -1.35166194e-03, -5.44629518e-04,
       -4.49668595e-03, -1.12352209e-02,  9.81695453e-03, -8.50617523e-03,
       -9.17517160e-04,  9.29020049e-03,  4.70816989e-03,  2.93409911e-03,
        6.35890274e-03, -7.85439904e-03,  3.04743129e-02,  1.72001480e-02,
        1.61073093e-02,  1.96954252e-02,  2.19868047e-02,  3.11311886e-02,
        3.15236145e-02,  2.26541429e-02,  3.20482806e-02,  2.47642476e-02,
       -1.40536865e-02, -1.29462428e-02, -3.38599483e-02, -1.32145084e-02,
       -2.40300387e-02,  3.63221397e-03, -2.16785513e-03,  1.45156775e-03,
        7.56192865e-03, -8.54131574e-03, -1.30468211e-02, -1.90678651e-02,
       -1.56250005e-02, -1.23368490e-02, -1.88782407e-02, -1.23358601e-02,
       -1.68852979e-02,  1.95944636e-02,  9.35787947e-03, -1.14866712e-02,
        9.57969285e-03,  1.22661624e-02, -1.35094663e-02,  1.86808828e-02,
       -1.65497865e-02, -1.93124074e-02, -2.56767203e-03, -1.13815062e-02,
       -1.10041518e-02, -1.59732635e-03,  4.91838126e-02,  2.39056406e-02,
       -1.86727586e-02, -1.13678014e-02, -1.34012951e-02,  1.00368587e-03,
        3.36253837e-02,  1.32666101e-02, -1.71384447e-02,  2.27652677e-02,
       -9.40954858e-04,  1.79343010e-03,  1.81978104e-02,  1.54247868e-02,
        1.76361893e-02, -1.73174339e-02, -3.25349252e-02, -1.59486205e-02,
       -1.25813330e-02, -3.92796761e-03,  2.43661513e-02,  2.27623403e-02,
       -1.45740171e-02,  1.95939047e-02, -2.21720665e-02,  9.29554302e-04,
        1.82761514e-03,  2.51753642e-02, -3.25960557e-02,  9.02367907e-03,
        8.46521268e-03,  6.67416995e-04, -4.27960449e-03,  1.40130002e-02,
        1.42943740e-02, -2.84893634e-02, -1.58514122e-02, -3.40288107e-03,
       -2.54146262e-03,  4.49117905e-04,  1.19130414e-02,  3.04178942e-02,
       -2.49859677e-02, -1.02922750e-02, -9.58419815e-03, -2.34426451e-02,
       -1.95957667e-02, -1.24978510e-02,  2.69558013e-03,  1.79681339e-03,
        4.26893119e-02,  7.73389837e-03, -2.83619970e-02, -1.28473763e-02,
       -3.04493074e-02, -1.24116183e-02, -1.18491899e-02,  2.98126526e-04,
       -2.19671397e-03, -1.84784914e-03,  1.59841174e-02,  2.24408005e-02,
        4.71393363e-04,  5.24354828e-03, -1.00841162e-02,  1.07449642e-02,
        2.25506609e-02, -1.18241378e-02, -1.69992575e-02,  4.68054945e-03,
       -3.94074463e-02, -1.35676379e-02,  2.44364823e-02,  1.90801913e-02,
        2.13801844e-02, -1.41242603e-02, -1.39899454e-02,  5.55795675e-03,
        5.85328783e-03,  1.49853825e-02,  1.30628253e-02,  8.25872805e-03,
       -2.32218371e-02,  1.94594749e-03, -1.56129263e-03, -2.61346946e-02,
       -3.55961055e-02, -9.87768560e-03, -1.96810009e-02, -1.61068361e-02,
       -2.81872084e-02, -2.47802658e-02, -1.77085071e-02, -5.29169341e-03,
       -2.07290530e-02,  1.59994101e+02,  1.79306852e-02,  7.88534825e-03,
        1.46312294e-02,  2.54691060e-02, -6.99960087e-03,  6.47191006e-03,
       -8.84281571e-03, -8.81120521e-03,  6.06508191e-03,  1.52938343e-02,
       -8.34126434e-03,  4.55861903e-03,  2.14933984e-02,  3.20624005e-02,
        1.69370659e-03,  3.01181430e-04,  1.31811661e-02,  2.14944720e-02,
       -1.35098972e-02, -2.26543737e-03, -1.09453576e-02,  1.57835125e-02,
       -3.72200075e-03,  3.36202021e-03,  4.28641600e-03,  1.22836355e-02,
        2.82344287e-03, -9.53224511e-03, -4.79907492e-03,  2.38517738e-02,
        6.16255947e-03,  3.70399577e-02, -3.69238175e-03, -3.34591074e-04,
        9.50912796e-03,  1.28706986e-02,  7.11423048e-03, -3.94682157e-03,
       -1.34120832e-02,  8.29887953e-03,  2.04284880e-02,  2.69292127e-02,
        4.54226332e-03, -3.19055313e-03,  9.81554987e-03,  1.91775490e-03,
        1.62762259e-04, -2.75063501e-02, -1.38460344e-02, -4.71960671e-03,
        3.12323618e-03,  6.02621373e-03, -2.05351919e-02, -2.26276611e-02,
        3.83048103e-03, -2.37466970e-04,  1.42993073e-02,  2.63817778e-02,
        1.23028524e-02,  1.65072419e-02,  7.10632355e-03,  1.66433931e-02,
        1.61462565e-02,  2.90730727e-02,  2.45973163e-02, -1.42035229e-02,
       -2.56509837e-03,  1.29516644e-02,  1.47038424e-02,  1.19522443e-02,
        2.07566193e-03,  5.40884556e-03,  1.41768876e-02,  1.05588337e-02,
        6.93991674e-03,  1.61920153e-02, -1.16470742e-02, -2.73916843e-03,
        2.36282585e-02, -1.86283901e-02,  6.65435699e-03, -7.81779097e-03,
       -1.60432624e-02, -3.98911341e-03, -8.85745040e-03, -2.38387933e-02,
       -1.12738327e-03, -5.46123813e-03, -6.32494623e-03, -9.22898920e-03,
       -3.39977807e-02, -1.22250595e-02, -1.15430060e-02,  3.59502457e-03,
       -1.29628517e-02, -8.21212411e-03,  6.72018028e-03, -1.48739456e-02,
        7.73320970e-04, -3.25541396e-02, -1.58141827e-02, -6.56526347e-03,
       -1.95241565e-02, -7.45083613e-03,  3.33760964e-03, -1.69871264e-02,
       -1.07657774e-02, -2.75251891e-02, -5.93370416e-03, -3.11827819e-02,
       -1.44502582e-02, -5.02525749e-03, -3.29167351e-02, -6.22071401e-03,
        4.30009356e-03, -2.79290553e-02,  3.22087722e-03, -3.57883709e-03,
        6.03612831e-03, -1.16107236e-02, -1.56836597e-02,  1.98080542e-02,
        5.21375358e-03,  1.59330346e-02,  1.61176141e-02, -8.21109841e-03,
        3.10470152e-02, -1.13649159e-03,  1.86411379e-02, -1.00414271e-02,
        9.52467321e-03, -9.93488726e-03,  9.56652803e-03, -1.60432826e-02,
       -1.23424861e-02,  1.08730094e-03, -3.48127720e-03, -1.74960947e-03,
       -2.51611714e-02, -2.09995652e-02, -8.37454985e-03,  2.96089674e-02,
       -6.98589871e-03,  1.00028860e-02,  1.72230254e-02,  2.14915863e-03,
       -1.48082626e-02, -5.73249010e-03,  2.00657979e-02,  1.91457065e-02,
        5.67508120e-03,  2.13098315e-02,  2.18247350e-02,  3.02280106e-03,
        1.25970622e-02, -2.82193426e-04,  2.69628884e-02,  1.14847537e-02,
        1.74008682e-02,  1.43992007e-02,  1.89308851e-02,  6.74375536e-03,
       -1.87767465e-02, -5.79359748e-03,  5.32816123e-03, -1.43674433e-02,
        9.64509740e-03, -3.83277619e-02,  8.10437422e-04, -2.22277639e-02,
       -3.56149615e-02,  3.98536187e-03, -6.85231394e-03, -6.52418772e-03,
        1.90236680e-03, -6.74249724e-03,  5.80795485e-03, -1.52491009e-02,
        1.01939483e-02,  2.93543902e-03, -4.08642069e-03], dtype=float64), Array([-1.81877122e-01,  2.37052058e-02,  7.94955249e-04,  6.95419041e-03,
        1.10483575e-05,  9.44603722e-02,  1.89127001e+00, -9.79096744e-01,
        7.74024293e-04,  2.29850380e-05, -1.04683980e-04,  9.86708597e-06,
        2.14088914e-06,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
        0.00000000e+00,  0.00000000e+00, -3.86861385e-02, -1.68909284e-03,
        4.04473340e-03,  1.95670241e-04, -8.94668166e-05,  0.00000000e+00,
        0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
        2.98162666e-01,  3.01610166e-05,  1.72775934e-04,  1.92376282e-04,
        4.00491482e-06,  2.77157896e-03,  1.62365253e-05,  9.28780367e-05,
        1.03286927e-04,  2.15797553e-06,  1.49142533e-03,  2.46514523e-05,
        1.40588562e-04,  1.55944393e-04,  3.28296615e-06,  2.26266650e-03,
       -1.12309049e-05, -6.40729197e-05, -7.10953651e-05, -1.49527707e-06,
       -1.03091799e-03,  1.97864252e-05,  1.12710685e-04,  1.24899828e-04,
        2.63701377e-06,  1.81554411e-03, -5.48852717e-05, -3.17205844e-04,
       -3.55765952e-04, -7.24618844e-06, -5.05561924e-03, -2.99520650e-05,
       -1.71547756e-04, -1.90967236e-04, -3.97799234e-06, -2.75240627e-03,
        3.07654467e-05,  1.77307135e-04,  1.98413440e-04,  4.06903654e-06,
        2.83163069e-03,  1.63262553e-05,  9.33794291e-05,  1.03832634e-04,
        2.17013332e-06,  1.49965513e-03,  1.65893897e-05,  9.52584118e-05,
        1.06273730e-04,  2.19940260e-06,  1.52539810e-03,  5.80100200e-04,
        4.28033794e-04, -3.55906045e-04,  3.31939194e-04, -7.66441830e-05,
       -6.72045835e-04, -8.45998224e-04,  7.08066752e-04, -2.75643433e-05,
        4.66364607e-04,  8.78427385e-04,  6.60159345e-04, -5.35864907e-04,
        4.99478795e-04, -1.09817904e-04, -1.01794190e-03, -1.28371395e-03,
        1.07393026e-03, -3.48458577e-05,  7.04763987e-04,  5.51134276e-05,
        1.95707578e-05, -3.92127187e-05,  3.71025286e-05, -1.82526855e-05,
       -6.33475545e-05, -7.57228294e-05,  6.42350808e-05, -1.47360057e-05,
        4.68343969e-05,  3.75232275e-04,  2.68643199e-04, -2.32319631e-04,
        2.16882398e-04, -5.38546118e-05, -4.34510500e-04, -5.45410941e-04,
        4.56822244e-04, -2.25548160e-05,  3.02648863e-04,  2.56276011e-04,
        1.76082308e-04, -1.60562761e-04,  1.50077438e-04, -4.06279998e-05,
       -2.96586572e-04, -3.70874080e-04,  3.10935973e-04, -1.96526727e-05,
        2.07588691e-04,  6.43463317e-04,  4.77340522e-04, -3.94126978e-04,
        3.67522663e-04, -8.36876089e-05, -7.45512076e-04, -9.38967245e-04,
        7.85774863e-04, -2.91081967e-05,  5.16998923e-04,  5.35954225e-04,
        3.93695209e-04, -3.29272688e-04,  3.07144333e-04, -7.17291095e-05,
       -6.20860153e-04, -7.81227139e-04,  6.53928396e-04, -2.64802419e-05,
        4.31085510e-04,  3.13814189e-04,  2.20851491e-04, -1.95271481e-04,
        1.82390892e-04, -4.70265609e-05, -3.63299289e-04, -4.55295852e-04,
        3.81499729e-04, -2.10574598e-05,  2.53568719e-04, -9.30116778e-05,
       -9.56727849e-05,  5.01438102e-05, -4.60866932e-05, -1.77501503e-06,
        1.08397117e-04,  1.41610104e-04, -1.17421572e-04, -1.11137878e-05,
       -7.15365726e-05,  4.09628783e-04,  2.95399282e-04, -2.53070817e-04,
        2.36201161e-04, -5.76836445e-05, -4.74391988e-04, -5.95877728e-04,
        4.99004510e-04, -2.33988844e-05,  3.30136604e-04,  4.78281295e-03,
        6.53657379e-03,  1.01285376e-03,  6.28142313e-03,  3.31214781e-03,
        6.25190310e-03,  6.65646236e-03,  4.53824832e-03,  1.52694324e-03,
        4.58938855e-03, -8.98364022e-05, -5.07083430e-05, -1.63604300e-05,
       -1.50490344e-05, -1.63008248e-06, -1.63266800e-06,  0.00000000e+00,
        0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
       -8.03009972e-04, -2.25932094e-04, -2.68095758e-04, -3.39673491e-05,
       -2.53540155e-05,  0.00000000e+00,  0.00000000e+00,  0.00000000e+00,
        0.00000000e+00,  0.00000000e+00, -2.32885984e-02, -1.03141625e-06,
       -6.68355457e-06, -6.86338818e-06, -1.48836022e-07, -9.50185953e-05,
       -1.03047892e-06, -6.61577694e-06, -6.77570782e-06, -1.49397117e-07,
       -9.47183260e-05, -5.82797835e-08, -3.30226804e-07, -3.25180050e-07,
       -8.94644499e-09, -5.20310557e-06, -5.87556848e-07, -3.79055684e-06,
       -3.88760013e-06, -8.49762712e-08, -5.40683099e-05, -8.19750328e-07,
       -5.29246261e-06, -5.42918199e-06, -1.18511188e-07, -7.54529114e-05,
        5.56782778e-07,  3.83420283e-06,  4.00382164e-06,  7.77859752e-08,
        5.20833591e-05, -3.11653943e-07, -1.95425867e-06, -1.98767683e-06,
       -4.57108893e-08, -2.84845009e-05, -1.24713336e-06, -8.11806162e-06,
       -8.34732429e-06, -1.79547386e-07, -1.15020306e-04, -9.05912320e-07,
       -6.00553705e-06, -6.20693220e-06, -1.29193021e-07, -8.39345804e-05,
       -1.62094820e-06, -1.06390438e-05, -1.09651764e-05, -2.32371665e-07,
       -1.49804968e-04, -9.78282807e-06,  4.82820426e-06, -1.06146294e-05,
       -2.34812333e-05,  1.06493312e-05, -1.95400361e-05,  2.19173993e-05,
       -4.91945644e-06,  3.67133836e-05,  7.15109694e-06, -2.01601353e-07,
        4.19944720e-07, -2.44667474e-07, -8.61963397e-07,  7.09799661e-07,
       -6.56988211e-07,  1.10844622e-06, -1.63564257e-07,  1.72288695e-06,
        3.53667686e-07, -4.27297456e-07,  5.23798126e-07, -4.88943402e-07,
       -1.39479317e-06,  9.43951581e-07, -1.10180540e-06,  1.59865071e-06,
       -2.75613597e-07,  2.54713683e-06,  5.13778750e-07, -7.88204592e-06,
        3.95361621e-06, -8.55737035e-06, -1.89938283e-05,  8.67739545e-06,
       -1.57938675e-05,  1.77890826e-05, -3.97597213e-06,  2.97715783e-05,
        5.80251616e-06, -2.76099143e-07,  4.54239305e-07, -3.25298315e-07,
       -1.03784928e-06,  7.87106527e-07, -8.03820821e-07,  1.27028658e-06,
       -2.00572124e-07,  1.99496810e-06,  4.06506261e-07, -1.12883170e-05,
        5.52081818e-06, -1.22440506e-05, -2.70353315e-05,  1.22110568e-05,
       -2.25070844e-05,  2.51869707e-05, -5.66676263e-06,  4.22112440e-05,
        8.21910384e-06,  7.44645247e-06, -3.09882385e-06,  8.03298026e-06,
        1.71934488e-05, -7.22420378e-06,  1.44160634e-05, -1.55018339e-05,
        3.63274310e-06, -2.62075582e-05, -5.07222318e-06, -1.52577637e-05,
        7.34723299e-06, -1.65402694e-05, -3.64064649e-05,  1.63290768e-05,
       -3.03302811e-05,  3.38082197e-05, -7.63705211e-06,  5.67079498e-05,
        1.10353820e-05, -8.82375888e-06,  4.38698830e-06, -9.57661168e-06,
       -2.12171245e-05,  9.65446308e-06, -1.76498994e-05,  1.98345442e-05,
       -4.44340389e-06,  3.32110163e-05,  6.47071615e-06, -2.34133577e-06,
        1.40441536e-06, -2.56054549e-06, -5.91341106e-06,  2.92953927e-06,
       -4.87405004e-06,  5.75560803e-06, -1.22571967e-06,  9.53708617e-06,
        1.87165727e-06,  2.06806650e-04,  2.07443768e-04,  1.31746020e-04,
        1.05203377e-04,  1.64351664e-04,  1.04532864e-04,  6.38007739e-05,
        2.65379876e-04,  2.52891808e-04,  4.76202048e-05], dtype=float64), Array([3.30792876e-03, 3.41646765e-04, 5.10006010e-05, 6.49120386e-06,
       2.91256444e-09, 2.48573572e-03, 1.50587471e+02, 2.34671580e-01,
       5.99113605e-08, 9.16305430e-11, 8.50103116e-10, 8.33891022e-12,
       3.77967013e-13, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 1.49661731e-04, 2.19683805e-07,
       2.08563290e-06, 1.09836235e-08, 9.47415013e-10, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       8.00361773e-03, 9.07977755e-11, 2.97666602e-09, 3.68736658e-09,
       1.60192911e-12, 7.66525587e-07, 2.64608516e-11, 8.67521881e-10,
       1.07459693e-09, 4.66838888e-13, 2.23378627e-07, 6.17307431e-11,
       2.02427461e-09, 2.50784974e-09, 1.08906652e-12, 5.21188634e-07,
       1.27924226e-11, 4.19430200e-10, 5.19608449e-10, 2.25686317e-13,
       1.07997313e-07, 3.99469332e-11, 1.30995960e-09, 1.62299146e-09,
       7.04729877e-13, 3.37263210e-07, 2.90580942e-10, 9.53334844e-09,
       1.18170631e-08, 5.12554771e-12, 2.45371770e-06, 8.96483137e-11,
       2.93967046e-09, 3.64176978e-09, 1.58168840e-12, 7.56957169e-07,
       9.22768129e-11, 3.02594556e-09, 3.74949178e-09, 1.62783456e-12,
       7.79041967e-07, 2.67707383e-11, 8.77737990e-10, 1.08729293e-09,
       4.72310330e-13, 2.26010047e-07, 2.72166434e-11, 8.92320061e-10,
       1.10540896e-09, 4.80166986e-13, 2.29766867e-07, 3.32049774e-08,
       1.64771994e-08, 1.28644657e-08, 1.12243179e-08, 7.61358162e-10,
       4.45020512e-08, 6.98886789e-08, 4.90697590e-08, 1.67127761e-10,
       2.16828399e-08, 7.57413796e-08, 3.77232097e-08, 2.93445344e-08,
       2.56041351e-08, 1.76282554e-09, 1.01511268e-07, 1.59436148e-07,
       1.11938909e-07, 4.15502187e-10, 4.94566345e-08, 3.47404653e-10,
       2.29340129e-10, 1.34786345e-10, 1.17911334e-10, 1.87457800e-11,
       4.66101396e-10, 7.38903486e-10, 5.17332133e-10, 1.58728782e-11,
       2.25830257e-10, 1.40104739e-08, 6.92910554e-09, 5.42792746e-09,
       4.73578548e-09, 3.16838034e-10, 1.87769141e-08, 2.94855647e-08,
       2.07028309e-08, 6.47439687e-11, 9.14925725e-09, 6.60823237e-09,
       3.26910640e-09, 2.56017350e-09, 2.23370208e-09, 1.49615492e-10,
       8.85642989e-09, 1.39074429e-08, 9.76483841e-09, 3.07633652e-11,
       4.31535315e-09, 4.07928105e-08, 2.02615606e-08, 1.58042143e-08,
       1.37894125e-08, 9.38937825e-10, 5.46715132e-08, 8.58617254e-08,
       6.02842488e-08, 2.10040569e-10, 2.66373596e-08, 2.83792849e-08,
       1.40726877e-08, 1.09948012e-08, 9.59300950e-09, 6.48829608e-10,
       3.80343869e-08, 5.97302758e-08, 4.19377441e-08, 1.40382158e-10,
       1.85318506e-08, 9.84529642e-09, 4.86658350e-09, 3.81426005e-09,
       3.32785802e-09, 2.22162973e-10, 1.31947239e-08, 2.07194868e-08,
       1.45479045e-08, 4.48622839e-11, 6.42931547e-09, 7.64436924e-10,
       5.21495363e-10, 2.96643378e-10, 2.59596228e-10, 4.44381275e-11,
       1.02576713e-09, 1.62817554e-09, 1.13951588e-09, 3.91060579e-11,
       4.96618803e-10, 1.66634863e-08, 8.24542352e-09, 6.45578851e-09,
       5.63258062e-09, 3.77640539e-10, 2.23325765e-08, 3.50695665e-08,
       2.46233978e-08, 7.80567176e-11, 1.08816726e-08, 2.19296270e-06,
       4.09910398e-06, 8.90520488e-08, 3.74419860e-06, 9.88445638e-07,
       3.70799116e-06, 4.20237359e-06, 1.96615542e-06, 1.96992919e-07,
       2.01972187e-06, 2.65745791e-09, 2.57133605e-10, 2.99267603e-11,
       2.03528918e-11, 2.04025163e-13, 2.71443360e-13, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       6.44825015e-08, 7.76743730e-09, 5.30879761e-09, 6.64683273e-11,
       6.83685285e-11, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 5.48812793e-05, 1.06143497e-13,
       4.47708215e-12, 4.72733762e-12, 2.20520424e-15, 9.01827433e-10,
       1.04982903e-13, 4.42835670e-12, 4.67629639e-12, 2.18124870e-15,
       8.91990522e-10, 2.99465798e-16, 1.26314310e-14, 1.34489059e-14,
       6.33036255e-18, 2.53358942e-12, 3.42939167e-14, 1.44640794e-12,
       1.52724736e-12, 7.12532640e-16, 2.91350005e-10, 6.68045646e-14,
       2.81799506e-12, 2.97566341e-12, 1.38786487e-15, 5.67632756e-10,
       3.29386798e-14, 1.38928425e-12, 1.46917018e-12, 6.86581671e-16,
       2.79626783e-10, 9.38461121e-15, 3.95898288e-13, 4.18286044e-13,
       1.95181019e-16, 7.97242723e-11, 1.55891781e-13, 6.57550905e-12,
       6.94317492e-12, 3.23866294e-15, 1.32452562e-09, 8.37713630e-14,
       3.53389535e-12, 3.73235741e-12, 1.74090884e-15, 7.11777476e-10,
       2.65558536e-13, 1.12016412e-11, 1.18287182e-11, 5.51741134e-15,
       2.25633197e-09, 9.51965853e-12, 2.36193763e-12, 1.12149270e-11,
       5.50902353e-11, 1.14258541e-11, 3.81163748e-11, 4.81817603e-11,
       2.41574219e-12, 1.35055931e-10, 5.12760768e-12, 1.93250015e-14,
       1.00735152e-14, 2.15596480e-14, 8.76919177e-14, 2.80653623e-14,
       6.19926017e-14, 8.30073886e-14, 3.94292997e-15, 2.21909508e-13,
       8.69105193e-15, 4.10902957e-14, 1.51944234e-14, 4.72648322e-14,
       2.14925518e-13, 5.39310591e-14, 1.49954447e-13, 1.93951464e-13,
       9.51699881e-15, 5.33458890e-13, 2.05051068e-14, 6.23812795e-12,
       1.54768160e-12, 7.34902036e-12, 3.60999350e-11, 7.48708216e-12,
       2.49772108e-11, 3.15726406e-11, 1.58302447e-12, 8.84998865e-11,
       3.36000245e-12, 2.54317124e-14, 1.14964263e-14, 2.87751117e-14,
       1.23456572e-13, 3.53101276e-14, 8.67144942e-14, 1.14177722e-13,
       5.50933570e-15, 3.09466002e-13, 1.20102574e-14, 1.26094547e-11,
       3.12885275e-12, 1.48548545e-11, 7.29685510e-11, 1.51344147e-11,
       5.04863859e-11, 6.38180253e-11, 3.19976878e-12, 1.78884666e-10,
       6.79158218e-12, 5.04347360e-12, 1.27048782e-12, 5.93722560e-12,
       2.90985173e-11, 6.07092215e-12, 2.01378126e-11, 2.54721548e-11,
       1.27636697e-12, 7.13607426e-11, 2.71024888e-12, 2.28352920e-11,
       5.66884395e-12, 2.69011306e-11, 1.32134255e-10, 2.74108680e-11,
       9.14230312e-11, 1.15568367e-10, 5.79418949e-12, 3.23937536e-10,
       1.22990079e-11, 7.77752775e-12, 1.92962687e-12, 9.16257557e-12,
       4.50089712e-11, 9.33484720e-12, 3.11412136e-11, 3.93646819e-11,
       1.97366568e-12, 1.10341352e-10, 4.18928498e-12, 6.17523265e-13,
       1.56135577e-13, 7.26822252e-13, 3.56018001e-12, 7.43854980e-13,
       2.46399045e-12, 3.11718673e-12, 1.56173461e-13, 8.73167877e-12,
       3.31653531e-13, 4.39133006e-09, 4.46820443e-09, 1.83822224e-09,
       1.16016593e-09, 2.82414405e-09, 1.15761737e-09, 4.57846443e-10,
       7.21403008e-09, 6.63615791e-09, 2.58753824e-10], dtype=float64)], [Array([0.09429652], dtype=float64), Array([-41.89694257], dtype=float64), Array([526.54744306], dtype=float64)], [Array([0.00690802], dtype=float64), Array([35.42361986], dtype=float64), Array([187.22954425], dtype=float64)]), tree_def=PyTreeDef((*, [*], *)), subtree_defs=(PyTreeDef((*, *, *)), PyTreeDef((*, *, *)), PyTreeDef((*, *, *)))),
 'result': defaultdict(<class 'list'>,
                       {'learning_rate': [Array(0.01, dtype=float64),
                                          Array(0.01, dtype=float64)],
                        'testing_loss': [Array(2.09811089, dtype=float64),
                                         Array(10.28477315, dtype=float64)],
                        'training_loss': [Array(2.09811089, dtype=float64),
                                          Array(10.28477315, dtype=float64)]})}
---------------------------------------------------------------------------------------------------- 
Meta parameters optimal {'parameters': Parameters(params={'constant': Array([2.        , 4.99      , 4.99      , 4.99      , 4.99000008],      dtype=float64), 'constant_jump': Array([4.99], dtype=float64), 'critical_moisture': Array([0.08403168], dtype=float64), 'heat_transfer_coefficient_constant': Array([0.51], dtype=float64), 'heat_transfer_coefficient_falling': defaultdict(<class 'list'>, {'bias': [Array([ 0.00774317,  0.01820478,  0.01097099, -0.00826477, -0.00067328,
       -0.0030729 ,  0.00087346, -0.00217987,  0.00316654, -0.0002606 ],      dtype=float64), Array([ 0.01226054,  0.01734865,  0.00600292, -0.02514639,  0.00494858,
       -0.00782287, -0.01535812,  0.00156552, -0.00266264,  0.01263654],      dtype=float64), Array([0.00112395], dtype=float64)], 'weight': [Array([[-0.01693931, -0.02614951, -0.0077915 , -0.01435991, -0.01317059],
       [ 0.00984163,  0.02479202, -0.00540031,  0.02569376, -0.01252373],
       [ 0.00402714, -0.0033042 ,  0.01924583,  0.0060479 ,  0.0068306 ],
       [-0.01188486, -0.01859709,  0.00247778, -0.01590586, -0.00829945],
       [ 0.01665647,  0.01203614,  0.01022954,  0.01374683, -0.00049784],
       [ 0.0228979 ,  0.00955529,  0.00840607,  0.01216523,  0.01439203],
       [ 0.0236875 ,  0.02407827,  0.01520764,  0.02460778,  0.01731985],
       [-0.00651754, -0.00536143, -0.02623504, -0.00571234, -0.0164807 ],
       [ 0.01105679,  0.00524892,  0.00886138,  0.01498773, -0.00111831],
       [-0.00556463, -0.01156393, -0.00810338, -0.00487268, -0.01138979]],      dtype=float64), Array([[-0.00484463, -0.00903859,  0.01221048,  0.01673063, -0.01802295,
         0.00208315,  0.00473576, -0.00598771,  0.01366369, -0.00909699],
       [-0.01180152,  0.0054306 , -0.01874262, -0.00365878, -0.00775216,
         0.04166554,  0.01634032, -0.01111944, -0.01539041, -0.00594397],
       [ 0.00796165,  0.03666632,  0.00531894, -0.00909836,  0.01284592,
        -0.00784547, -0.00476166,  0.02484337,  0.00672205,  0.02496973],
       [-0.00985767, -0.02494063, -0.02336888, -0.00516519, -0.01104741,
         0.01690442,  0.01528804, -0.00710293,  0.01299809, -0.01472651],
       [ 0.00834805,  0.00907449,  0.01770814, -0.0251238 ,  0.00120787,
         0.00104916, -0.00673296,  0.00312479,  0.00567576,  0.02173048],
       [-0.02099243, -0.00796021, -0.01078024,  0.00482336, -0.0059776 ,
         0.00441019,  0.02287735, -0.01745504, -0.01501838, -0.00213009],
       [-0.01595615, -0.01178628, -0.01988732,  0.01007489, -0.00482955,
         0.03519801,  0.00021192, -0.02084785, -0.01810637, -0.02299761],
       [-0.00496929, -0.0043995 , -0.00714205,  0.00524324, -0.00927201,
         0.00854167,  0.01499767,  0.00791435, -0.00215402, -0.00264256],
       [ 0.00282884,  0.01269224, -0.00497333, -0.02373006,  0.00405401,
        -0.03144328, -0.00530932,  0.01625118,  0.01489841,  0.01382647],
       [-0.00665704, -0.0063348 , -0.00185374,  0.0132592 ,  0.00800055,
         0.00559285,  0.00077111, -0.01573873, -0.00428596,  0.00588597]],      dtype=float64), Array([[-0.01853457, -0.02799882, -0.00189081, -0.01204209, -0.00826738,
        -0.02054717, -0.01713929, -0.01009242,  0.00280392, -0.01312996]],      dtype=float64)]}), 'mass_transfer_coefficient_constant': Array([159.99000015], dtype=float64), 'mass_transfer_coefficient_falling': defaultdict(<class 'list'>, {'bias': [Array([ 0.01048952,  0.00084844,  0.00678239,  0.0169853 , -0.01436741,
        0.00647191, -0.00884282, -0.00881121,  0.00606508,  0.01529383],      dtype=float64), Array([-0.01578262, -0.00147377,  0.01283491,  0.02225885, -0.00552149,
        0.00030118,  0.01318117,  0.02149447, -0.0135099 , -0.00226544],      dtype=float64), Array([-0.01834284], dtype=float64)], 'weight': [Array([[ 0.008344  , -0.01115341, -0.00406464, -0.00310149,  0.00483815],
       [-0.00465022, -0.01692864, -0.01217076,  0.0163958 , -0.00130021],
       [ 0.02931459, -0.01057914, -0.00690757,  0.0024043 ,  0.00518072],
       [-0.00033389, -0.01136076, -0.02081193,  0.00093114,  0.01297471],
       [ 0.01947879, -0.00287468, -0.01059483,  0.00241852, -0.00553449],
       [ 0.00736416, -0.01985448, -0.00607585,  0.00214886,  0.01045234],
       [-0.00150938, -0.02783875, -0.02985472, -0.0036301 , -0.00774409],
       [ 0.00687489,  0.01893335,  0.00484957,  0.00914093, -0.00033057],
       [ 0.00928944,  0.00863047,  0.02151454,  0.01738832, -0.02160663],
       [-0.00996056,  0.00547244,  0.00720243,  0.00463476, -0.00534553]],      dtype=float64), Array([[-2.05123648e-03,  2.15674569e-02,  3.10119342e-03,
        -5.04149436e-04,  2.36046629e-02, -1.90942381e-02,
         4.69055268e-03,  1.61823154e-02, -1.11947134e-02,
         1.40842460e-02],
       [-1.12194590e-02, -6.24105126e-03, -7.89831250e-03,
        -1.56966712e-02, -1.38951453e-02, -7.32552173e-03,
         3.57807880e-03, -1.24112038e-02, -6.30748005e-04,
        -2.51132571e-02],
       [-1.71745058e-02, -1.57972848e-03, -1.68638805e-03,
        -2.00357919e-02,  1.33445374e-03,  3.24788565e-05,
        -6.34060326e-03, -5.84453899e-03, -2.43527240e-02,
        -7.39744041e-03],
       [-1.39900997e-02, -1.20484810e-02, -1.48777225e-02,
        -4.10079463e-03, -9.52581906e-03, -1.82016248e-02,
        -2.00758741e-02, -1.33672840e-02, -2.37361025e-02,
        -7.00305090e-03],
       [-9.08795194e-03, -2.29890297e-02, -1.07214437e-02,
        -2.64179601e-03, -1.80956360e-02, -3.19280306e-03,
         5.25581705e-03, -2.84577512e-04, -3.17866971e-03,
        -6.99053949e-03],
       [ 1.23284406e-02,  1.25564220e-02,  8.45834211e-03,
         8.67039887e-03, -8.25710291e-04,  2.35935613e-02,
         6.28229273e-03,  1.11883291e-02, -2.61500081e-03,
         1.69449017e-02],
       [-2.13387630e-03,  3.09968679e-03, -8.28692119e-03,
        -4.84277784e-03, -5.81091289e-03,  4.07747426e-03,
        -8.97671775e-03, -1.75975834e-02, -2.82996295e-02,
        -1.56227242e-02],
       [ 2.20962031e-02,  2.74288363e-04,  2.49923420e-03,
         9.77044443e-03,  9.48780479e-03, -2.22724256e-02,
         1.66760921e-03,  1.26012838e-02,  2.65597532e-02,
         1.30787974e-02],
       [ 1.38656660e-02,  2.92539486e-02, -4.42094837e-03,
         5.15555627e-03,  7.15251202e-03,  1.95208403e-02,
         1.89233450e-02,  9.96051415e-03,  2.18387620e-02,
         2.63686139e-02],
       [-2.63417151e-04, -1.04225189e-02, -1.28574803e-02,
        -2.04497043e-03, -6.37861840e-03,  2.34044446e-03,
        -3.06585166e-02, -6.47992749e-03, -1.46340554e-02,
        -2.79730893e-02]], dtype=float64), Array([[ 0.01132909,  0.00045039,  0.00070662,  0.0091704 ,  0.00053496,
         0.01303761, -0.00823278,  0.01754635,  0.01024055,  0.00287966]],      dtype=float64)]})})}
---------------------------------------------------------------------------------------------------- 
Initial moisture content (mean, sigma) {'R13': (Array([0.09], dtype=float64), Array([0.013], dtype=float64))}
Saving parameters for R13SSR4
---------------------------------------------------------------------------------------------------- 
Plotting R13SSR4
Loss scaled (total cost, cost) R13SSR4 : (Array([5.06651171, 3.02572544, 6.97740829], dtype=float64), Array([5.06651171, 3.02572544, 6.97740829], dtype=float64))
Loss unscaled R13SSR4 : [1004.60168982  523.03942463 1625.00292679]
Product energy R13SSR4 : {'zone1': Array([71241.719, 71241.719, 71241.719], dtype=float64), 'zone2': Array([79148.314, 79148.314, 79148.314], dtype=float64), 'zone3': Array([128793.33133333, 128793.33133333, 128793.33133333], dtype=float64), 'zone4': Array([173118.309, 173118.309, 173118.309], dtype=float64), 'zone5': Array([173118.309, 173118.309, 173118.309], dtype=float64)}
Product average cure index R13SSR4 : [[1.09238805e-06 2.18477490e-06 3.27716056e-06 4.37945597e-06
  6.76985484e-06 1.57759028e-05 4.48840258e-05 1.20254820e-04
  2.81521683e-04 5.78733105e-04 1.06721704e-03 1.80248828e-03
  2.83646825e-03 4.21530876e-03 5.88703156e-03 7.77566331e-03
  9.88535884e-03 1.22190774e-02 1.47788135e-02 1.75657795e-02
  2.05805464e-02 2.38231501e-02 2.72931708e-02 3.09897892e-02
  3.49118273e-02 3.90577747e-02 4.34258043e-02 4.80137818e-02
  5.25167984e-02 5.67619379e-02 6.09333313e-02 6.51976182e-02
  6.97001911e-02 7.45624012e-02 7.98808112e-02 8.57283600e-02
  9.21567797e-02 9.91995638e-02 1.06874973e-01 1.15188775e-01
  1.24136599e-01 1.33705886e-01 1.43972656e-01 1.55000360e-01
  1.66746614e-01 1.79162622e-01 1.92194691e-01 2.05785559e-01
  2.19875582e-01 2.34403791e-01 2.49308845e-01 2.64529884e-01
  2.80007281e-01 2.95683281e-01 3.11502579e-01 3.27412742e-01
  3.43364037e-01 3.59310318e-01 3.75209689e-01 3.91023992e-01
  4.06718817e-01 4.22263440e-01 4.37630725e-01 4.52796946e-01
  4.67741632e-01 4.82447312e-01 4.96899358e-01 5.11085661e-01
  5.24996492e-01 5.38624210e-01]
 [1.09238805e-06 2.18477490e-06 3.27716056e-06 4.36954503e-06
  5.46192830e-06 6.55431038e-06 7.64669127e-06 8.73907097e-06
  9.83144947e-06 1.09238268e-05 1.20162029e-05 1.31085778e-05
  1.42009515e-05 1.52933241e-05 1.63856954e-05 1.74780656e-05
  1.85704345e-05 1.96628023e-05 2.07551688e-05 2.18475342e-05
  2.30174701e-05 2.51648341e-05 3.07075721e-05 4.47596339e-05
  7.60961687e-05 1.37256031e-04 2.43802270e-04 4.13089144e-04
  5.76853366e-04 6.86489702e-04 7.80949510e-04 9.01259025e-04
  1.09952155e-03 1.43991744e-03 1.99446290e-03 2.83692209e-03
  4.03741216e-03 5.65883466e-03 7.75518732e-03 1.03712891e-02
  1.35433497e-02 1.72999207e-02 2.17241036e-02 2.69050860e-02
  3.28695580e-02 3.96366380e-02 4.72180646e-02 5.56182598e-02
  6.48343065e-02 7.48558896e-02 8.56652608e-02 9.72372851e-02
  1.09539617e-01 1.22533041e-01 1.36172004e-01 1.50405359e-01
  1.65176334e-01 1.80424627e-01 1.96088363e-01 2.12104310e-01
  2.28409024e-01 2.44939935e-01 2.61636314e-01 2.78440093e-01
  2.95296533e-01 3.12154738e-01 3.28967953e-01 3.45693813e-01
  3.62294319e-01 3.78735878e-01]
 [2.04067218e-07 1.56544042e-06 8.56827226e-06 3.37795752e-05
  1.02016855e-04 2.51304667e-04 5.30148336e-04 9.92741176e-04
  1.69408570e-03 2.68626261e-03 4.01618448e-03 5.72461687e-03
  7.84605250e-03 1.04090461e-02 1.33201161e-02 1.64696613e-02
  1.98574845e-02 2.34828989e-02 2.73447973e-02 3.14417018e-02
  3.57717985e-02 4.03329594e-02 4.51227556e-02 5.01384621e-02
  5.53770571e-02 6.08352170e-02 6.65093070e-02 7.23953714e-02
  7.82272794e-02 8.38731055e-02 8.95163011e-02 9.53188005e-02
  1.01417413e-01 1.07922137e-01 1.14916663e-01 1.22460523e-01
  1.30592158e-01 1.39332256e-01 1.48686947e-01 1.58650645e-01
  1.69208450e-01 1.80338135e-01 1.92106510e-01 2.04565755e-01
  2.17662732e-01 2.31339730e-01 2.45535975e-01 2.60188909e-01
  2.75235292e-01 2.90612144e-01 3.06257558e-01 3.22111399e-01
  3.38115867e-01 3.54215996e-01 3.70360009e-01 3.86499617e-01
  4.02589767e-01 4.18589279e-01 4.34461284e-01 4.50172717e-01
  4.65694232e-01 4.81000082e-01 4.96067955e-01 5.10878765e-01
  5.25416474e-01 5.39667819e-01 5.53622122e-01 5.67271045e-01
  5.80608331e-01 5.93629635e-01]]
---------------------------------------------------------------------------------------------------- 
Total cost [10.13302342  6.05145089 13.95481658]
---------------------------------------------------------------------------------------------------- 
Optimal objective Cost(elbo={'R13SSR4': Array([5.06651171, 3.02572544, 6.97740829], dtype=float64)}, cost={'R13SSR4': Array([5.06651171, 3.02572544, 6.97740829], dtype=float64)})
---------------------------------------------------------------------------------------------------- 
Event times EventTime(event_time={'R13SSR4': Array([[[ 3.79400889],
        [ 3.82043847],
        [ 3.84691857],
        [ 3.87339395],
        [ 3.89989143],
        [ 3.92632309],
        [ 3.95280241],
        [ 3.97923345],
        [ 4.00564323],
        [ 4.03217687],
        [ 4.05862635],
        [ 4.08503242],
        [ 4.11157405],
        [ 4.13797204],
        [ 4.16438514],
        [ 4.19079091],
        [ 4.21719124],
        [ 4.24362328],
        [ 4.27007625],
        [ 4.29647507]],

       [[20.31742382],
        [20.4544185 ],
        [20.59136055],
        [20.72825147],
        [20.86509527],
        [21.00192549],
        [21.13880859],
        [21.27559272],
        [21.41225841],
        [21.54882346],
        [21.68531083],
        [21.82174436],
        [21.95814645],
        [22.09453709],
        [22.23093355],
        [22.36735058],
        [22.50337933],
        [22.63946301],
        [22.77539026],
        [22.91143826]],

       [[ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ]]], dtype=float64)})
---------------------------------------------------------------------------------------------------- 
Plotting R13SSR4
Loss scaled (total cost, cost) R13SSR4 : (Array([5.06651171, 3.02572544, 6.97740829], dtype=float64), Array([5.06651171, 3.02572544, 6.97740829], dtype=float64))
Loss unscaled R13SSR4 : [1004.60168982  523.03942463 1625.00292679]
Product energy R13SSR4 : {'zone1': Array([71241.719, 71241.719, 71241.719], dtype=float64), 'zone2': Array([79148.314, 79148.314, 79148.314], dtype=float64), 'zone3': Array([128793.33133333, 128793.33133333, 128793.33133333], dtype=float64), 'zone4': Array([173118.309, 173118.309, 173118.309], dtype=float64), 'zone5': Array([173118.309, 173118.309, 173118.309], dtype=float64)}
Product average cure index R13SSR4 : [[1.09238805e-06 2.18477490e-06 3.27716056e-06 4.37945597e-06
  6.76985484e-06 1.57759028e-05 4.48840258e-05 1.20254820e-04
  2.81521683e-04 5.78733105e-04 1.06721704e-03 1.80248828e-03
  2.83646825e-03 4.21530876e-03 5.88703156e-03 7.77566331e-03
  9.88535884e-03 1.22190774e-02 1.47788135e-02 1.75657795e-02
  2.05805464e-02 2.38231501e-02 2.72931708e-02 3.09897892e-02
  3.49118273e-02 3.90577747e-02 4.34258043e-02 4.80137818e-02
  5.25167984e-02 5.67619379e-02 6.09333313e-02 6.51976182e-02
  6.97001911e-02 7.45624012e-02 7.98808112e-02 8.57283600e-02
  9.21567797e-02 9.91995638e-02 1.06874973e-01 1.15188775e-01
  1.24136599e-01 1.33705886e-01 1.43972656e-01 1.55000360e-01
  1.66746614e-01 1.79162622e-01 1.92194691e-01 2.05785559e-01
  2.19875582e-01 2.34403791e-01 2.49308845e-01 2.64529884e-01
  2.80007281e-01 2.95683281e-01 3.11502579e-01 3.27412742e-01
  3.43364037e-01 3.59310318e-01 3.75209689e-01 3.91023992e-01
  4.06718817e-01 4.22263440e-01 4.37630725e-01 4.52796946e-01
  4.67741632e-01 4.82447312e-01 4.96899358e-01 5.11085661e-01
  5.24996492e-01 5.38624210e-01]
 [1.09238805e-06 2.18477490e-06 3.27716056e-06 4.36954503e-06
  5.46192830e-06 6.55431038e-06 7.64669127e-06 8.73907097e-06
  9.83144947e-06 1.09238268e-05 1.20162029e-05 1.31085778e-05
  1.42009515e-05 1.52933241e-05 1.63856954e-05 1.74780656e-05
  1.85704345e-05 1.96628023e-05 2.07551688e-05 2.18475342e-05
  2.30174701e-05 2.51648341e-05 3.07075721e-05 4.47596339e-05
  7.60961687e-05 1.37256031e-04 2.43802270e-04 4.13089144e-04
  5.76853366e-04 6.86489702e-04 7.80949510e-04 9.01259025e-04
  1.09952155e-03 1.43991744e-03 1.99446290e-03 2.83692209e-03
  4.03741216e-03 5.65883466e-03 7.75518732e-03 1.03712891e-02
  1.35433497e-02 1.72999207e-02 2.17241036e-02 2.69050860e-02
  3.28695580e-02 3.96366380e-02 4.72180646e-02 5.56182598e-02
  6.48343065e-02 7.48558896e-02 8.56652608e-02 9.72372851e-02
  1.09539617e-01 1.22533041e-01 1.36172004e-01 1.50405359e-01
  1.65176334e-01 1.80424627e-01 1.96088363e-01 2.12104310e-01
  2.28409024e-01 2.44939935e-01 2.61636314e-01 2.78440093e-01
  2.95296533e-01 3.12154738e-01 3.28967953e-01 3.45693813e-01
  3.62294319e-01 3.78735878e-01]
 [2.04067218e-07 1.56544042e-06 8.56827226e-06 3.37795752e-05
  1.02016855e-04 2.51304667e-04 5.30148336e-04 9.92741176e-04
  1.69408570e-03 2.68626261e-03 4.01618448e-03 5.72461687e-03
  7.84605250e-03 1.04090461e-02 1.33201161e-02 1.64696613e-02
  1.98574845e-02 2.34828989e-02 2.73447973e-02 3.14417018e-02
  3.57717985e-02 4.03329594e-02 4.51227556e-02 5.01384621e-02
  5.53770571e-02 6.08352170e-02 6.65093070e-02 7.23953714e-02
  7.82272794e-02 8.38731055e-02 8.95163011e-02 9.53188005e-02
  1.01417413e-01 1.07922137e-01 1.14916663e-01 1.22460523e-01
  1.30592158e-01 1.39332256e-01 1.48686947e-01 1.58650645e-01
  1.69208450e-01 1.80338135e-01 1.92106510e-01 2.04565755e-01
  2.17662732e-01 2.31339730e-01 2.45535975e-01 2.60188909e-01
  2.75235292e-01 2.90612144e-01 3.06257558e-01 3.22111399e-01
  3.38115867e-01 3.54215996e-01 3.70360009e-01 3.86499617e-01
  4.02589767e-01 4.18589279e-01 4.34461284e-01 4.50172717e-01
  4.65694232e-01 4.81000082e-01 4.96067955e-01 5.10878765e-01
  5.25416474e-01 5.39667819e-01 5.53622122e-01 5.67271045e-01
  5.80608331e-01 5.93629635e-01]]
---------------------------------------------------------------------------------------------------- 
Total cost [10.13302342  6.05145089 13.95481658]
---------------------------------------------------------------------------------------------------- 
Optimal objective Cost(elbo={'R13SSR4': Array([5.06651171, 3.02572544, 6.97740829], dtype=float64)}, cost={'R13SSR4': Array([5.06651171, 3.02572544, 6.97740829], dtype=float64)})
---------------------------------------------------------------------------------------------------- 
Event times EventTime(event_time={'R13SSR4': Array([[[ 3.79400889],
        [ 3.82043847],
        [ 3.84691857],
        [ 3.87339395],
        [ 3.89989143],
        [ 3.92632309],
        [ 3.95280241],
        [ 3.97923345],
        [ 4.00564323],
        [ 4.03217687],
        [ 4.05862635],
        [ 4.08503242],
        [ 4.11157405],
        [ 4.13797204],
        [ 4.16438514],
        [ 4.19079091],
        [ 4.21719124],
        [ 4.24362328],
        [ 4.27007625],
        [ 4.29647507]],

       [[20.31742382],
        [20.4544185 ],
        [20.59136055],
        [20.72825147],
        [20.86509527],
        [21.00192549],
        [21.13880859],
        [21.27559272],
        [21.41225841],
        [21.54882346],
        [21.68531083],
        [21.82174436],
        [21.95814645],
        [22.09453709],
        [22.23093355],
        [22.36735058],
        [22.50337933],
        [22.63946301],
        [22.77539026],
        [22.91143826]],

       [[ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ],
        [ 0.        ]]], dtype=float64)})
